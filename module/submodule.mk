include ${ROOTDIR}/build/config/env.mk

SUBMODULE_PATH = ${ROOTDIR}/modules/$(MODULE)/${SUBMODULE}
SUBMODULE_SRC_INC_PATH = $(SUBMODULE_PATH)/include
SUBMODULE_SRC_PATH = $(SUBMODULE_PATH)/src

SUBMODULE_OUTPUT_PATH = $(OUTPUTS_DIR)/$(MODULE)/${MODULE_VERSION}/$(SUBMODULE)

SUBMODULE_OUTPUT_TMP_PATH = $(SUBMODULE_OUTPUT_PATH)/.tmp
SUBMODULE_OUTPUT_INC_PATH = $(SUBMODULE_OUTPUT_PATH)/include/${SUBMODULE}
SUBMODULE_OUTPUT_LIB_PATH = $(SUBMODULE_OUTPUT_PATH)/lib
SUBMODULE_OUTPUT_LIBEXEC_PATH = $(SUBMODULE_OUTPUT_PATH)/libexec
SUBMODULE_OUTPUT_BIN_PATH = $(SUBMODULE_OUTPUT_PATH)/bin
SUBMODULE_OUTPUT_SBIN_PATH = $(SUBMODULE_OUTPUT_PATH)/sbin
SUBMODULE_OUTPUT_CFG_PATH = $(SUBMODULE_OUTPUT_PATH)/etc
SUBMODULE_OUTPUT_SHARED_STATE_PATH = $(SUBMODULE_OUTPUT_PATH)/com
SUBMODULE_OUTPUT_LOCAL_STATE_PATH = $(SUBMODULE_OUTPUT_PATH)/var
SUBMODULE_OUTPUT_RUN_STATE_PATH = $(SUBMODULE_OUTPUT_PATH)/run

SUBMODULE_TMP2_OBJS = $(patsubst %.c, %.o, $(SUBMODULE_SRC))
SUBMODULE_OBJS = $(patsubst %.cpp, %.o, $(SUBMODULE_TMP2_OBJS))
SUBMODULE_OUTPUT_OBJS = $(SUBMODULE_OBJS:%=$(SUBMODULE_OUTPUT_TMP_PATH)/%)

include $(ROOTDIR)/build/compilation/compilation.mk

prepare_submodule:
	$(MKDIR) $(SUBMODULE_OUTPUT_TMP_PATH)
	$(MKDIR) $(SUBMODULE_OUTPUT_INC_PATH)
	$(MKDIR) $(SUBMODULE_OUTPUT_LIB_PATH)
	$(MKDIR) $(SUBMODULE_OUTPUT_BIN_PATH)
	$(MKDIR) $(SUBMODULE_OUTPUT_CFG_PATH)

build_submodule: $(SUBMODULE_TMP_TARGET)

install_submodule:
	if [ -d ${SUBMODULE_SRC_INC_PATH} ]; then \
		$(CP) ${SUBMODULE_SRC_INC_PATH}/* ${SUBMODULE_OUTPUT_INC_PATH}; \
	fi
	$(CP) ${SUBMODULE_TMP_TARGET} ${SUBMODULE_TARGET}

submodule_build_prerequisites = prepare_submodule build_submodule install_submodule

submodule_build: $(submodule_build_prerequisites)

submodule_clean:
	rm -rf $(SUBMODULE_OUTPUT_PATH)
